{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack2021\\\\osa2\\\\puhelinluettelo\\\\src\\\\components\\\\Person.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Person = props => {\n  // printtaa henkilöt ja niiden numerot\n  const persons = props.persons;\n  const newFilter = props.newFilter;\n  const personsToShow = false // filtteröidään, joko näytetään kaikki, tai näytetään filtteröity lista > person.name sisältää (filtterin setit)\n  ? persons : persons.filter(person => person.name.toLocaleLowerCase().includes(newFilter.toLowerCase())); // muutetaan kaikki pieniksi kirjaimiksi niin ei oo kirjainkoolla väliä\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: personsToShow.map(tyyppi => /*#__PURE__*/_jsxDEV(Person, {\n      henkilo: tyyppi\n    }, tyyppi.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Person;\nexport default Person;\n\nvar _c;\n\n$RefreshReg$(_c, \"Person\");","map":{"version":3,"sources":["C:/FullStack2021/osa2/puhelinluettelo/src/components/Person.js"],"names":["Person","props","persons","newFilter","personsToShow","filter","person","name","toLocaleLowerCase","includes","toLowerCase","map","tyyppi","id"],"mappings":";;;AAAA,MAAMA,MAAM,GAAIC,KAAD,IAAW;AAAG;AACzB,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAMC,SAAS,GAAGF,KAAK,CAACE,SAAxB;AAEA,QAAMC,aAAa,GAAG,MAAU;AAAV,IACpBF,OADoB,GAEpBA,OAAO,CAACG,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,iBAAZ,GAAgCC,QAAhC,CAAyCN,SAAS,CAACO,WAAV,EAAzC,CAAzB,CAFF,CAJsB,CAMyE;;AAE/F,sBACI;AAAA,cACCN,aAAa,CAACO,GAAd,CAAkBC,MAAM,iBACrB,QAAC,MAAD;AAAyB,MAAA,OAAO,EAAEA;AAAlC,OAAaA,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,YADH;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD,CAhBH;;KAAMb,M;AAkBJ,eAAeA,MAAf","sourcesContent":["const Person = (props) => {  // printtaa henkilöt ja niiden numerot\r\n    const persons = props.persons\r\n    const newFilter = props.newFilter\r\n\r\n    const personsToShow = false     // filtteröidään, joko näytetään kaikki, tai näytetään filtteröity lista > person.name sisältää (filtterin setit)\r\n    ? persons\r\n    : persons.filter(person => person.name.toLocaleLowerCase().includes(newFilter.toLowerCase()))  // muutetaan kaikki pieniksi kirjaimiksi niin ei oo kirjainkoolla väliä\r\n\r\n    return (\r\n        <div>\r\n        {personsToShow.map(tyyppi =>\r\n            <Person key={tyyppi.id}  henkilo={tyyppi} />         \r\n     )}\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Person"]},"metadata":{},"sourceType":"module"}