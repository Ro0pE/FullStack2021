{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack2021\\\\osa2\\\\puhelinluettelo\\\\src\\\\components\\\\Person.js\";\nimport personService from '../services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Person = props => {\n  // printtaa henkilöt ja niiden numerot\n  const filter = props.newFilter;\n  const personsToShow = props.personsToShow;\n\n  const deletePerson = id => {\n    console.log('id', id);\n    console.log('lets remove ', personsToShow[id - 1]);\n    personService.deletePerson(id).then(deletedPerson => {\n      props.setPersons(personsToShow.map(person => person.id !== id ? person : deletedPerson));\n    });\n  }; //  : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase())) // muutetaan kaikki pieniksi kirjaimiksi niin ei oo kirjainkoolla väliä\n\n\n  if (personsToShow.length > 0) {\n    console.log(personsToShow);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: personsToShow.filter(tyyppi => tyyppi.name.includes(filter)).map(tyyppi => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [tyyppi.name, \" \", tyyppi.number]\n      }, tyyppi.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"kek\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this);\n  }\n};\n\n_c = Person;\nexport default Person;\n\nvar _c;\n\n$RefreshReg$(_c, \"Person\");","map":{"version":3,"sources":["C:/FullStack2021/osa2/puhelinluettelo/src/components/Person.js"],"names":["personService","Person","props","filter","newFilter","personsToShow","deletePerson","id","console","log","then","deletedPerson","setPersons","map","person","length","tyyppi","name","includes","number"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,qBAA1B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAG;AAEzB,QAAMC,MAAM,GAAGD,KAAK,CAACE,SAArB;AACA,QAAMC,aAAa,GAAGH,KAAK,CAACG,aAA5B;;AAKA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAE3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBF,EAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,aAAa,CAACE,EAAE,GAAC,CAAJ,CAAzC;AAGCP,IAAAA,aAAa,CACbM,YADA,CACaC,EADb,EAEAG,IAFA,CAEKC,aAAa,IAAI;AACrBT,MAAAA,KAAK,CAACU,UAAN,CAAiBP,aAAa,CAACQ,GAAd,CAAkBC,MAAM,IAAIA,MAAM,CAACP,EAAP,KAAcA,EAAd,GAAmBO,MAAnB,GAA4BH,aAAxD,CAAjB;AACD,KAJA;AAOF,GAbD,CARsB,CAsBxB;;;AACE,MAAIN,aAAa,CAACU,MAAd,GAAuB,CAA3B,EAA6B;AAC3BP,IAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AAEF,wBACI;AAAA,gBACCA,aAAa,CAACF,MAAd,CAAqBa,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBf,MAArB,CAA/B,EAA6DU,GAA7D,CAAiEG,MAAM,iBACtE;AAAA,mBAAuBA,MAAM,CAACC,IAA9B,OAAqCD,MAAM,CAACG,MAA5C;AAAA,SAAWH,MAAM,CAACT,EAAlB;AAAA;AAAA;AAAA;AAAA,cADD;AADD;AAAA;AAAA;AAAA;AAAA,YADJ;AAOK,GAVL,MAWO;AACH,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF,CAzCL;;KAAMN,M;AA2CJ,eAAeA,MAAf","sourcesContent":["import personService from '../services/persons'\r\n\r\nconst Person = (props) => {  // printtaa henkilöt ja niiden numerot\r\n  \r\n    const filter = props.newFilter\r\n    const personsToShow = props.personsToShow\r\n   \r\n    \r\n     \r\n    \r\n    const deletePerson = (id) => {\r\n  \r\n      console.log('id',id)\r\n      console.log('lets remove ', personsToShow[id-1])\r\n\r\n\r\n       personService\r\n      .deletePerson(id)\r\n      .then(deletedPerson => {\r\n        props.setPersons(personsToShow.map(person => person.id !== id ? person : deletedPerson))\r\n      })\r\n\r\n\r\n    }\r\n  //  : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase())) // muutetaan kaikki pieniksi kirjaimiksi niin ei oo kirjainkoolla väliä\r\n    if (personsToShow.length > 0){\r\n      console.log(personsToShow)\r\n\r\n    return (\r\n        <div>\r\n        {personsToShow.filter(tyyppi => tyyppi.name.includes(filter)).map(tyyppi => (\r\n          <li key = {tyyppi.id}>{tyyppi.name} {tyyppi.number}</li>\r\n        ))} \r\n      </div>\r\n    )\r\n        }\r\n      else {\r\n        return (\r\n          <div>\r\n            kek\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n  export default Person"]},"metadata":{},"sourceType":"module"}