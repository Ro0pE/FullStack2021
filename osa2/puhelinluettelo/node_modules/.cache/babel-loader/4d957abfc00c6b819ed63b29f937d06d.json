{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack2021\\\\osa2\\\\puhelinluettelo\\\\src\\\\components\\\\Person.js\",\n    _s = $RefreshSig$();\n\nimport personService from '../services/persons';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Person = props => {\n  _s();\n\n  // printtaa henkilöt ja niiden numerot\n  const setPersons = props.setPersons;\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons); // haetaan henkilöt databasesta\n    });\n  }, []);\n\n  const deletePerson = id => {\n    if (typeof id !== 'undefined') {\n      const newList = props.persons.filter(person => person.id !== id);\n      personService.deletePerson(id).then(deletedPerson => {\n        setPersons(props.persons.map(person => person.id !== id || person.name !== '' ? person : deletedPerson));\n      }).then(response => {\n        setPersons(response);\n      });\n      console.log(props.persons, ' persoons');\n      console.log(newList, ' newliist');\n      console.log(props.persons, ' lista atm');\n    } else {\n      console.log('nothign to remove');\n    }\n  };\n\n  const personsToShow = false // filtteröidään, joko näytetään kaikki, tai näytetään filtteröity lista > person.name sisältää (filtterin setit)\n  ? props.persons : props.persons.filter(person => person.name.toLowerCase().includes(props.newFilter.toLowerCase())); // muutetaan kaikki pieniksi kirjaimiksi niin ei oo kirjainkoolla väliä\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: personsToShow.map(tyyppi => /*#__PURE__*/_jsxDEV(\"li\", {\n      ket: tyyppi.id,\n      children: [\" \", tyyppi.name, \"  \", tyyppi.number, \"   \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deletePerson.bind(this, tyyppi.id),\n        children: \"  delete  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 69\n      }, this), \" \", tyyppi.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Person, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Person;\nexport default Person;\n\nvar _c;\n\n$RefreshReg$(_c, \"Person\");","map":{"version":3,"sources":["C:/FullStack2021/osa2/puhelinluettelo/src/components/Person.js"],"names":["personService","React","useState","useEffect","Person","props","setPersons","getAll","then","initialPersons","deletePerson","id","newList","persons","filter","person","deletedPerson","map","name","response","console","log","personsToShow","toLowerCase","includes","newFilter","tyyppi","number","bind"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,qBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAAG;AAIzB,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,aAAa,CACVO,MADH,GAEGC,IAFH,CAEQC,cAAc,IAAI;AACtBH,MAAAA,UAAU,CAACG,cAAD,CAAV,CADsB,CACM;AAE/B,KALD;AAOD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC3B,QAAI,OAAOA,EAAP,KAAe,WAAnB,EAAgC;AAChC,YAAMC,OAAO,GAAGP,KAAK,CAACQ,OAAN,CAAcC,MAAd,CAAsBC,MAAD,IAAYA,MAAM,CAACJ,EAAP,KAAcA,EAA/C,CAAhB;AAEAX,MAAAA,aAAa,CACZU,YADD,CACcC,EADd,EAECH,IAFD,CAEMQ,aAAa,IAAI;AACrBV,QAAAA,UAAU,CAACD,KAAK,CAACQ,OAAN,CAAcI,GAAd,CAAkBF,MAAM,IAAIA,MAAM,CAACJ,EAAP,KAAcA,EAAd,IAAoBI,MAAM,CAACG,IAAP,KAAgB,EAApC,GAAyCH,MAAzC,GAAkDC,aAA9E,CAAD,CAAV;AACD,OAJD,EAIGR,IAJH,CAIQW,QAAQ,IAAI;AAClBb,QAAAA,UAAU,CAACa,QAAD,CAAV;AACD,OAND;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAK,CAACQ,OAAlB,EAA0B,WAA1B;AAEAO,MAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ,EAAoB,WAApB;AAGAQ,MAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAK,CAACQ,OAAlB,EAA2B,YAA3B;AACD,KAjBC,MAiBK;AACLO,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AAEA,GAtBD;;AAwBA,QAAMC,aAAa,GAAG,MAAU;AAAV,IAEpBjB,KAAK,CAACQ,OAFc,GAGpBR,KAAK,CAACQ,OAAN,CAAcC,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACG,IAAP,CAAYK,WAAZ,GAA0BC,QAA1B,CAAmCnB,KAAK,CAACoB,SAAN,CAAgBF,WAAhB,EAAnC,CAA/B,CAHF,CAvCsB,CA0C8E;;AAQpG,sBACI;AAAA,cACCD,aAAa,CAACL,GAAd,CAAkBS,MAAM,iBACrB;AAAI,MAAA,GAAG,EAAIA,MAAM,CAACf,EAAlB;AAAA,sBAAwBe,MAAM,CAACR,IAA/B,QAAuCQ,MAAM,CAACC,MAA9C,sBAAwD;AAAQ,QAAA,OAAO,EAAIjB,YAAY,CAACkB,IAAb,CAAkB,IAAlB,EAAwBF,MAAM,CAACf,EAA/B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxD,OAAoIe,MAAM,CAACf,EAA3I;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AASD,CA3DH;;GAAMP,M;;KAAAA,M;AA6DJ,eAAeA,MAAf","sourcesContent":["import personService from '../services/persons'\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nconst Person = (props) => {  // printtaa henkilöt ja niiden numerot\r\n  \r\n\r\n   \r\n    const setPersons = props.setPersons\r\n    useEffect(() => {\r\n      personService\r\n        .getAll()\r\n        .then(initialPersons => {\r\n          setPersons(initialPersons)  // haetaan henkilöt databasesta\r\n          \r\n      })\r\n      \r\n    }, [])\r\n\r\n    const deletePerson = (id) => {\r\n      if (typeof(id) !== 'undefined') {\r\n      const newList = props.persons.filter((person) => person.id !== id);\r\n\r\n      personService\r\n      .deletePerson(id)\r\n      .then(deletedPerson => {\r\n        setPersons(props.persons.map(person => person.id !== id || person.name !== '' ? person : deletedPerson))\r\n      }).then(response => {\r\n        setPersons(response)\r\n      })\r\n      \r\n      console.log(props.persons,' persoons')\r\n      \r\n      console.log(newList,' newliist')\r\n      \r\n\r\n      console.log(props.persons, ' lista atm')\r\n    } else {\r\n      console.log('nothign to remove')\r\n    }\r\n      \r\n    }\r\n    \r\n    const personsToShow = false     // filtteröidään, joko näytetään kaikki, tai näytetään filtteröity lista > person.name sisältää (filtterin setit)\r\n\r\n    ? props.persons\r\n    : props.persons.filter(person => person.name.toLowerCase().includes(props.newFilter.toLowerCase())) // muutetaan kaikki pieniksi kirjaimiksi niin ei oo kirjainkoolla väliä\r\n\r\n\r\n  \r\n\r\n \r\n    \r\n\r\n    return (\r\n        <div>\r\n        {personsToShow.map(tyyppi =>\r\n            <li ket = {tyyppi.id}> {tyyppi.name}  {tyyppi.number}   <button onClick = {deletePerson.bind(this, tyyppi.id)}>  delete  </button> {tyyppi.id}</li>\r\n           \r\n                 \r\n     )} \r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Person"]},"metadata":{},"sourceType":"module"}