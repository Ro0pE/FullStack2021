{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack2021\\\\osa2\\\\puhelinluettelo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([// tässä on lista henkilöistä jotka ovat puhelinluettelossa\n    //    { name: 'Arto Hellas', numero: '040-123456'},\n    //    { name: 'Ada Lovelace', numero: '39-44-5323523' },\n    //    { name: 'Dan Abramov', numero: '12-43-234345' },\n    //    { name: 'Mary Poppendieck', numero: '39-23-6423122' }\n  ]);\n  const [newPerson, setNewPerson] = useState(); // tätä tarvitaan uuden henkilön  nimen lisäämiseen\n\n  const [newNumber, setNewNumber] = useState(); // tätä tarvitraan uuden henkilön numeron lisäämiseen\n\n  const [newFilter, setFilter] = useState(''); // tässä on filtteri\n\n  const personsToShow = false // filtteröidään, joko näytetään kaikki, tai näytetään filtteröity lista > person.name sisältää (filtterin setit)\n  ? persons : persons.filter(person => person.name.toLocaleLowerCase().includes(newFilter.toLowerCase())); // muutetaan kaikki pieniksi kirjaimiksi niin ei oo kirjainkoolla väliä\n\n  const clear = () => {\n    // tyhjennä lista\n    setPersons([]);\n  };\n\n  const setFilterValue = event => {\n    // aseta filtterin value\n    setFilter(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"filter shown with: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: setFilterValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      form: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: clear,\n      children: \"Clear!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), personsToShow.map(tyyppi => /*#__PURE__*/_jsxDEV(Person, {\n      henkilo: tyyppi\n    }, tyyppi.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"3WcgWPfML6T2xdTVfT0t6JUNZQQ=\");\n\n_c = App;\n\nconst Person = ({\n  henkilo\n}) => {\n  // printtaa henkilöt ja niiden numerot\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [henkilo.name, \" \", henkilo.numero]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Person;\n\nconst PersonForm = ({}) => {\n  const addPerson = event => {\n    // lisätään henkilö, nimi,numero ja id\n    event.preventDefault();\n    const personObject = {\n      // uutta objektia tuosta\n      name: newPerson,\n      numero: newNumber,\n      id: persons.length + 1\n    };\n    var listalla = false; // \n\n    for (let i = 0; i < persons.length; i++) {\n      if (!(persons[i].name === personObject.name)) {\n        // tutkitaan, onko henkilö jo puhelinluettelossa. Jos ei, niin lisätään ja jos on niin alerttia perään\n        listalla = false;\n      } else {\n        listalla = true;\n        alert(`Person ${personObject.name} is already added to phonebook.`);\n      }\n    }\n\n    if (!(listalla === true)) {\n      setPersons(persons.concat(personObject));\n    }\n\n    listalla = false;\n  };\n\n  const handleAddPerson = event => {\n    // lisää henkilölle nimi\n    console.log(event.target.value);\n    setNewPerson(event.target.value);\n  };\n\n  const handleAddNumber = event => {\n    // lisää henkilölle numero\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addPerson,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleAddPerson\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleAddNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = PersonForm;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Person\");\n$RefreshReg$(_c3, \"PersonForm\");","map":{"version":3,"sources":["C:/FullStack2021/osa2/puhelinluettelo/src/App.js"],"names":["React","useState","App","persons","setPersons","newPerson","setNewPerson","newNumber","setNewNumber","newFilter","setFilter","personsToShow","filter","person","name","toLocaleLowerCase","includes","toLowerCase","clear","setFilterValue","event","target","value","map","tyyppi","id","Person","henkilo","numero","PersonForm","addPerson","preventDefault","personObject","length","listalla","i","alert","concat","handleAddPerson","console","log","handleAddNumber"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAIhB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAAyBH,QAAQ,CAAC,CAAI;AAC9C;AACA;AACA;AACA;AAJ0C,GAAD,CAAvC;AAMA,QAAM,CAAEI,SAAF,EAAaC,YAAb,IAA8BL,QAAQ,EAA5C,CAVgB,CAUgC;;AAChD,QAAM,CAAEM,SAAF,EAAaC,YAAb,IAA8BP,QAAQ,EAA5C,CAXgB,CAWgC;;AAChD,QAAM,CAACQ,SAAD,EAAYC,SAAZ,IAAyBT,QAAQ,CAAC,EAAD,CAAvC,CAZgB,CAY6B;;AAG7C,QAAMU,aAAa,GAAG,MAAU;AAAV,IACpBR,OADoB,GAEpBA,OAAO,CAACS,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,iBAAZ,GAAgCC,QAAhC,CAAyCP,SAAS,CAACQ,WAAV,EAAzC,CAAzB,CAFF,CAfgB,CAiB+E;;AAO/F,QAAMC,KAAK,GAAG,MAAM;AAAG;AACrBd,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAFD;;AAIA,QAAMe,cAAc,GAAIC,KAAD,IAAW;AAAG;AACnCV,IAAAA,SAAS,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AAED,GAHD;;AAQA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEI;AAAA,qDACmB;AAAO,QAAA,QAAQ,EAAEH;AAAjB;AAAA;AAAA;AAAA;AAAA,cADnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,UAAD;AAAY,MAAA,IAAI;AAAhB;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAID,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,EAWGP,aAAa,CAACY,GAAd,CAAkBC,MAAM,iBACrB,QAAC,MAAD;AAAyB,MAAA,OAAO,EAAEA;AAAlC,OAAaA,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,YADH,CAXH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAtDD;;GAAMvB,G;;KAAAA,G;;AAuDN,MAAMwB,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAG;AACjC,sBACE;AAAA,eAAKA,OAAO,CAACb,IAAb,OAAoBa,OAAO,CAACC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;MAAMF,M;;AAKN,MAAMG,UAAU,GAAG,CAAC,EAAD,KAAQ;AACzB,QAAMC,SAAS,GAAIV,KAAD,IAAW;AAAI;AAC/BA,IAAAA,KAAK,CAACW,cAAN;AACA,UAAMC,YAAY,GAAG;AAAG;AACtBlB,MAAAA,IAAI,EAAET,SADa;AAEnBuB,MAAAA,MAAM,EAAErB,SAFW;AAGnBkB,MAAAA,EAAE,EAAEtB,OAAO,CAAC8B,MAAR,GAAgB;AAHD,KAArB;AAKA,QAAIC,QAAQ,GAAG,KAAf,CAP2B,CAOJ;;AACvB,SAAK,IAAKC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGhC,OAAO,CAAC8B,MAA7B,EAAqCE,CAAC,EAAtC,EAAyC;AAExC,UAAI,EAAEhC,OAAO,CAACgC,CAAD,CAAP,CAAWrB,IAAX,KAAoBkB,YAAY,CAAClB,IAAnC,CAAJ,EAA6C;AAAG;AAC9CoB,QAAAA,QAAQ,GAAG,KAAX;AACD,OAFD,MAEO;AACLA,QAAAA,QAAQ,GAAG,IAAX;AACDE,QAAAA,KAAK,CAAE,UAASJ,YAAY,CAAClB,IAAK,iCAA7B,CAAL;AACA;AACD;;AACD,QAAI,EAAEoB,QAAQ,KAAK,IAAf,CAAJ,EAAyB;AACvB9B,MAAAA,UAAU,CAACD,OAAO,CAACkC,MAAR,CAAeL,YAAf,CAAD,CAAV;AACD;;AACDE,IAAAA,QAAQ,GAAG,KAAX;AAED,GAtBD;;AAwBA,QAAMI,eAAe,GAAIlB,KAAD,IAAW;AAAG;AACpCmB,IAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACAhB,IAAAA,YAAY,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AAED,GAJD;;AAKA,QAAMmB,eAAe,GAAIrB,KAAD,IAAW;AAAG;AACpCmB,IAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACAd,IAAAA,YAAY,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AAED,GAJD;;AAKA,sBACE;AAAM,IAAA,QAAQ,EAAIQ,SAAlB;AAAA,2BACA;AAAA,8BACE;AAAA,2CAAU;AAAO,UAAA,QAAQ,EAAEQ;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,4CAAW;AAAO,UAAA,QAAQ,EAAEG;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA7CD;;MAAMZ,U;AAgDN,eAAe3B,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst App = () => {\n\n\n\n  const [ persons, setPersons] = useState([   // tässä on lista henkilöistä jotka ovat puhelinluettelossa\n//    { name: 'Arto Hellas', numero: '040-123456'},\n//    { name: 'Ada Lovelace', numero: '39-44-5323523' },\n//    { name: 'Dan Abramov', numero: '12-43-234345' },\n//    { name: 'Mary Poppendieck', numero: '39-23-6423122' }\n  ])\n  const [ newPerson, setNewPerson ] = useState()  // tätä tarvitaan uuden henkilön  nimen lisäämiseen\n  const [ newNumber, setNewNumber ] = useState()  // tätä tarvitraan uuden henkilön numeron lisäämiseen\n  const [newFilter, setFilter] = useState('')  // tässä on filtteri\n\n\n  const personsToShow = false     // filtteröidään, joko näytetään kaikki, tai näytetään filtteröity lista > person.name sisältää (filtterin setit)\n  ? persons\n  : persons.filter(person => person.name.toLocaleLowerCase().includes(newFilter.toLowerCase()))  // muutetaan kaikki pieniksi kirjaimiksi niin ei oo kirjainkoolla väliä\n    \n\n\n\n\n\n  const clear = () => {  // tyhjennä lista\n    setPersons([])\n  }\n\n  const setFilterValue = (event) => {  // aseta filtterin value\n    setFilter(event.target.value)\n\n  }\n  \n\n\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <div>\n        filter shown with: <input onChange={setFilterValue}/>      \n        </div>\n        \n      <h2>Add a new</h2>\n      <PersonForm form/>\n      <button type=\"submit\" onClick = {clear}>Clear!</button>\n\n      <h2>Numbers</h2>\n      {personsToShow.map(tyyppi =>\n          <Person key={tyyppi.id}  henkilo={tyyppi} />\n        )}\n    </div>\n  )\n\n}\nconst Person = ({ henkilo }) => {  // printtaa henkilöt ja niiden numerot\n  return (\n    <li>{henkilo.name} {henkilo.numero}</li>\n  )\n}\nconst PersonForm = ({}) => {\n  const addPerson = (event) => {   // lisätään henkilö, nimi,numero ja id\n    event.preventDefault()\n    const personObject = {  // uutta objektia tuosta\n      name: newPerson,\n      numero: newNumber, \n      id: persons.length +1   \n    }\n    var listalla = false;  // \n    for (let  i = 0; i < persons.length; i++){\n\n     if (!(persons[i].name === personObject.name)){  // tutkitaan, onko henkilö jo puhelinluettelossa. Jos ei, niin lisätään ja jos on niin alerttia perään\n       listalla = false;   \n     } else {\n       listalla = true;\n      alert(`Person ${personObject.name} is already added to phonebook.`)\n     }\n    }\n    if (!(listalla === true)){\n      setPersons(persons.concat(personObject))\n    }\n    listalla = false;\n  \n  }\n\n  const handleAddPerson = (event) => {  // lisää henkilölle nimi\n    console.log(event.target.value)\n    setNewPerson(event.target.value)\n \n  }\n  const handleAddNumber = (event) => {  // lisää henkilölle numero\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n \n  }\n  return (\n    <form onSubmit = {addPerson}>\n    <div>\n      <p> name: <input onChange={handleAddPerson}/></p> \n      <p>number: <input onChange={handleAddNumber}/></p>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n\n}\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}