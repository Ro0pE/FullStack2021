{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack2021\\\\osa2\\\\puhelinluettelo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Clear from './components/Clear';\nimport Filter from './components/Filter';\nimport AddPerson from './components/AddPerson';\nimport Person from './components/Person';\nimport personService from './services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]); // tässä on lista henkilöistä jotka ovat puhelinluettelossa, aluksi tyhjä\n\n  const [newPerson, setNewPerson] = useState(''); // tätä tarvitaan uuden henkilön  nimen lisäämiseen\n\n  const [newNumber, setNewNumber] = useState(''); // tätä tarvitraan uuden henkilön numeron lisäämiseen\n\n  const [newFilter, setFilter] = useState(''); // tässä on filtteri\n\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons); // initialPersons on servulle olevat tyypit\n    });\n  }, []);\n\n  if (newFilter === '') {\n    console.log('ei filsua');\n  }\n\n  const personsToShow = showAll // filtteröidään\n  ? persons // true   \n  : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase())); // false\n  // muutetaan kaikki pieniksi kirjaimiksi\n  // TEST \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPerson, {\n      persons: persons,\n      setPersons: setPersons,\n      newPerson: newPerson,\n      setNewPerson: setNewPerson,\n      newNumber: newNumber,\n      setNewNumber: setNewNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Person, {\n      persons: persons,\n      setPersons: setPersons,\n      personsToShow: personsToShow,\n      setShowAll: setShowAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"---------------------------------------\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Clear, {\n      setPersons: setPersons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"nWfygXR3xx29XQ9Mv9v+zZyFbk0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/FullStack2021/osa2/puhelinluettelo/src/App.js"],"names":["React","useState","useEffect","Clear","Filter","AddPerson","Person","personService","App","persons","setPersons","newPerson","setNewPerson","newNumber","setNewNumber","newFilter","setFilter","showAll","setShowAll","getAll","then","initialPersons","console","log","personsToShow","filter","person","name","toLowerCase","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;AAKA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC,CAFgB,CAE+B;;AAC/C,QAAM,CAAEU,SAAF,EAAaC,YAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C,CAHgB,CAGkC;;AAClD,QAAM,CAAEY,SAAF,EAAaC,YAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C,CAJgB,CAIkC;;AAClD,QAAM,CAAEc,SAAF,EAAaC,SAAb,IAA2Bf,QAAQ,CAAC,EAAD,CAAzC,CALgB,CAK+B;;AAC/C,QAAM,CAAEgB,OAAF,EAAWC,UAAX,IAA0BjB,QAAQ,CAAC,IAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,aAAa,CACVY,MADH,GAEGC,IAFH,CAEQC,cAAc,IAAI;AACtBX,MAAAA,UAAU,CAACW,cAAD,CAAV,CADsB,CACM;AAE/B,KALD;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,MAAIN,SAAS,KAAK,EAAlB,EAAqB;AACnBO,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AAGD,QAAMC,aAAa,GAAGP,OAAO,CAAK;AAAL,IACzBR,OADyB,CAChB;AADgB,IAEzBA,OAAO,CAACgB,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCd,SAAS,CAACa,WAAV,EAAnC,CAAzB,CAFJ,CAtBgB,CAwB0E;AACxF;AAIJ;;AACE,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEM,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAIZ;AAArB;AAAA;AAAA;AAAA;AAAA,YAFN,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIK,QAAC,SAAD;AAAW,MAAA,OAAO,EAAIP,OAAtB;AAA+B,MAAA,UAAU,EAAIC,UAA7C;AAAyD,MAAA,SAAS,EAAIC,SAAtE;AAAiF,MAAA,YAAY,EAAIC,YAAjG;AAA+G,MAAA,SAAS,EAAIC,SAA5H;AAAuI,MAAA,YAAY,EAAIC;AAAvJ;AAAA;AAAA;AAAA;AAAA,YAJL,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOM,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAIL,OAAnB;AAA4B,MAAA,UAAU,EAAGC,UAAzC;AAAqD,MAAA,aAAa,EAAIc,aAAtE;AAAqF,MAAA,UAAU,EAAIN;AAAnG;AAAA;AAAA;AAAA;AAAA,YAPN,eAQM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARN,eASM,QAAC,KAAD;AAAO,MAAA,UAAU,EAAIR;AAArB;AAAA;AAAA;AAAA;AAAA,YATN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA5CD;;GAAMF,G;;KAAAA,G;AA+CN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Clear from './components/Clear'\nimport Filter from './components/Filter'\nimport AddPerson from './components/AddPerson'\nimport Person from './components/Person'\nimport personService from './services/persons'\n\n\n\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([])   // tässä on lista henkilöistä jotka ovat puhelinluettelossa, aluksi tyhjä\n  const [ newPerson, setNewPerson ] = useState('')  // tätä tarvitaan uuden henkilön  nimen lisäämiseen\n  const [ newNumber, setNewNumber ] = useState('')  // tätä tarvitraan uuden henkilön numeron lisäämiseen\n  const [ newFilter, setFilter ] = useState('')  // tässä on filtteri\n  const [ showAll, setShowAll ] = useState(true)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)  // initialPersons on servulle olevat tyypit\n        \n    })\n  }, [])\n\n  if (newFilter === ''){\n    console.log('ei filsua')\n  }\n  \n \n  const personsToShow = showAll     // filtteröidään\n    ? persons  // true   \n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase())) // false\n    // muutetaan kaikki pieniksi kirjaimiksi\n     \n\n\n// TEST \n  return (\n    <div>\n      <h2>Phonebook:</h2>     \n          <Filter setFilter = {setFilter} />    \n      <h2>Add a new:</h2>\n         <AddPerson persons = {persons} setPersons = {setPersons} newPerson = {newPerson} setNewPerson = {setNewPerson} newNumber = {newNumber} setNewNumber = {setNewNumber}/>\n\n      <h2>Numbers:</h2>\n          <Person persons = {persons} setPersons ={setPersons} personsToShow = {personsToShow} setShowAll = {setShowAll}/>\n          <p>---------------------------------------</p>\n          <Clear setPersons = {setPersons}/>\n    </div>\n  )\n\n}\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}