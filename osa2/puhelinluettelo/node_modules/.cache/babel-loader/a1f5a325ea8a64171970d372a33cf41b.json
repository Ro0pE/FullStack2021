{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack2021\\\\osa2\\\\puhelinluettelo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Clear from './components/Clear';\nimport Filter from './components/Filter';\nimport AddPerson from './components/AddPerson';\nimport Person from './components/Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]); // tässä on lista henkilöistä jotka ovat puhelinluettelossa, aluksi tyhjä\n\n  const [newPerson, setNewPerson] = useState(); // tätä tarvitaan uuden henkilön  nimen lisäämiseen\n\n  const [newNumber, setNewNumber] = useState(); // tätä tarvitraan uuden henkilön numeron lisäämiseen\n\n  const [newFilter, setFilter] = useState(''); // tässä on filtteri\n\n  const personsToShow = false // filtteröidään, joko näytetään kaikki, tai näytetään filtteröity lista > person.name sisältää (filtterin setit)\n  ? persons : persons.filter(person => person.name.toLocaleLowerCase().includes(newFilter.toLowerCase())); // muutetaan kaikki pieniksi kirjaimiksi niin ei oo kirjainkoolla väliä\n\n  const handleAddPerson = event => {\n    // lisää henkilölle nimi\n    console.log(event.target.value);\n    setNewPerson(event.target.value);\n  };\n\n  const handleAddNumber = event => {\n    // lisää henkilölle numero\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPerson, {\n      persons: persons,\n      setPersons: setPersons,\n      newPerson: newPerson,\n      setNewPerson: setNewPerson,\n      newNumber: newNumber,\n      setNewNumber: setNewNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Clear, {\n      setPersons: setPersons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Person, {\n      persons: persons,\n      newFilter: newFilter,\n      filter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"dqfjpLJLlsmtxdJjajY0QRQ5Q2E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/FullStack2021/osa2/puhelinluettelo/src/App.js"],"names":["React","useState","Clear","Filter","AddPerson","Person","App","persons","setPersons","newPerson","setNewPerson","newNumber","setNewNumber","newFilter","setFilter","personsToShow","filter","person","name","toLocaleLowerCase","includes","toLowerCase","handleAddPerson","event","console","log","target","value","handleAddNumber"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC,CAFgB,CAE+B;;AAC/C,QAAM,CAAEQ,SAAF,EAAaC,YAAb,IAA8BT,QAAQ,EAA5C,CAHgB,CAGgC;;AAChD,QAAM,CAAEU,SAAF,EAAaC,YAAb,IAA8BX,QAAQ,EAA5C,CAJgB,CAIgC;;AAChD,QAAM,CAAEY,SAAF,EAAaC,SAAb,IAA2Bb,QAAQ,CAAC,EAAD,CAAzC,CALgB,CAK+B;;AAE/C,QAAMc,aAAa,GAAG,MAAU;AAAV,IAClBR,OADkB,GAElBA,OAAO,CAACS,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,iBAAZ,GAAgCC,QAAhC,CAAyCP,SAAS,CAACQ,WAAV,EAAzC,CAAzB,CAFJ,CAPgB,CASiF;;AAIjG,QAAMC,eAAe,GAAIC,KAAD,IAAW;AAAG;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAjB,IAAAA,YAAY,CAACa,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAZ;AAED,GAJD;;AAKA,QAAMC,eAAe,GAAIL,KAAD,IAAW;AAAG;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAf,IAAAA,YAAY,CAACW,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAZ;AAED,GAJD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEM,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAIb;AAArB;AAAA;AAAA;AAAA;AAAA,YAFN,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIK,QAAC,SAAD;AAAW,MAAA,OAAO,EAAIP,OAAtB;AAA+B,MAAA,UAAU,EAAIC,UAA7C;AAAyD,MAAA,SAAS,EAAIC,SAAtE;AAAiF,MAAA,YAAY,EAAIC,YAAjG;AAA+G,MAAA,SAAS,EAAIC,SAA5H;AAAuI,MAAA,YAAY,EAAIC;AAAvJ;AAAA;AAAA;AAAA;AAAA,YAJL,eAKK,QAAC,KAAD;AAAO,MAAA,UAAU,EAAIJ;AAArB;AAAA;AAAA;AAAA;AAAA,YALL,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOM,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAID,OAAnB;AAA4B,MAAA,SAAS,EAAIM,SAAzC;AAAoD,MAAA,MAAM,EAAIC;AAA9D;AAAA;AAAA;AAAA;AAAA,YAPN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CArCD;;GAAMR,G;;KAAAA,G;AAyCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Clear from './components/Clear'\nimport Filter from './components/Filter'\nimport AddPerson from './components/AddPerson'\nimport Person from './components/Person'\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([])   // tässä on lista henkilöistä jotka ovat puhelinluettelossa, aluksi tyhjä\n  const [ newPerson, setNewPerson ] = useState()  // tätä tarvitaan uuden henkilön  nimen lisäämiseen\n  const [ newNumber, setNewNumber ] = useState()  // tätä tarvitraan uuden henkilön numeron lisäämiseen\n  const [ newFilter, setFilter ] = useState('')  // tässä on filtteri\n\n  const personsToShow = false     // filtteröidään, joko näytetään kaikki, tai näytetään filtteröity lista > person.name sisältää (filtterin setit)\n    ? persons\n    : persons.filter(person => person.name.toLocaleLowerCase().includes(newFilter.toLowerCase()))  // muutetaan kaikki pieniksi kirjaimiksi niin ei oo kirjainkoolla väliä\n\n\n\n  const handleAddPerson = (event) => {  // lisää henkilölle nimi\n    console.log(event.target.value)\n    setNewPerson(event.target.value)\n \n  }\n  const handleAddNumber = (event) => {  // lisää henkilölle numero\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n \n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>     \n          <Filter setFilter = {setFilter} />    \n      <h2>Add a new</h2>\n         <AddPerson persons = {persons} setPersons = {setPersons} newPerson = {newPerson} setNewPerson = {setNewPerson} newNumber = {newNumber} setNewNumber = {setNewNumber}/>\n         <Clear setPersons = {setPersons}/>\n      <h2>Numbers</h2>\n          <Person persons = {persons} newFilter = {newFilter} filter = {setFilter}/>\n    </div>\n  )\n\n}\n\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}