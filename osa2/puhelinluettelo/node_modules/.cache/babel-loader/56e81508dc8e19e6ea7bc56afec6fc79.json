{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack2021\\\\osa2\\\\puhelinluettelo\\\\src\\\\components\\\\Person.js\";\nimport personService from '../services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Person = props => {\n  // printtaa henkilöt ja niiden numerot\n  const personsToShow = props.personsToShow;\n  const persons = props.persons;\n  const newFilter = props.newFilter;\n  const filteredList = [];\n\n  if (persons.length > 0) {\n    console.log('uep');\n    filteredList = persons.filter(person => {\n      return person.name.toLowerCase().includes(newFilter.toLowerCase());\n    });\n  } else {\n    filteredList = persons.filter(person => {\n      return person.name.toLowerCase().includes(newFilter.toLowerCase());\n    });\n  }\n\n  const deletePerson = id => {\n    personService.deletePerson(id).then(deletedPerson => {\n      props.setPersons(filteredList.map(person => person.id !== id ? person : deletedPerson));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filteredList.map(tyyppi => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [tyyppi.name, \"  \", tyyppi.number, \"   \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deletePerson.bind(this, tyyppi.id),\n        children: \"  delete  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 68\n      }, this)]\n    }, tyyppi.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Person;\nexport default Person;\n\nvar _c;\n\n$RefreshReg$(_c, \"Person\");","map":{"version":3,"sources":["C:/FullStack2021/osa2/puhelinluettelo/src/components/Person.js"],"names":["personService","Person","props","personsToShow","persons","newFilter","filteredList","length","console","log","filter","person","name","toLowerCase","includes","deletePerson","id","then","deletedPerson","setPersons","map","tyyppi","number","bind"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,qBAA1B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAG;AAGzB,QAAMC,aAAa,GAAGD,KAAK,CAACC,aAA5B;AACA,QAAMC,OAAO,GAAGF,KAAK,CAACE,OAAtB;AACA,QAAMC,SAAS,GAAGH,KAAK,CAACG,SAAxB;AACA,QAAMC,YAAY,GAAG,EAArB;;AACA,MAAIF,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAuB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACCH,IAAAA,YAAY,GAAGF,OAAO,CAACM,MAAR,CAAeC,MAAM,IAAI;AACvC,aAAOA,MAAM,CAACC,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCT,SAAS,CAACQ,WAAV,EAAnC,CAAP;AAGH,KAJiB,CAAf;AAKJ,GAPC,MAOK;AACJP,IAAAA,YAAY,GAAGF,OAAO,CAACM,MAAR,CAAeC,MAAM,IAAI;AACvC,aAAOA,MAAM,CAACC,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCT,SAAS,CAACQ,WAAV,EAAnC,CAAP;AAED,KAHe,CAAf;AAIF;;AAKC,QAAME,YAAY,GAAIC,EAAD,IAAQ;AAG1BhB,IAAAA,aAAa,CACbe,YADA,CACaC,EADb,EAEAC,IAFA,CAEKC,aAAa,IAAI;AACrBhB,MAAAA,KAAK,CAACiB,UAAN,CAAiBb,YAAY,CAACc,GAAb,CAAiBT,MAAM,IAAIA,MAAM,CAACK,EAAP,KAAcA,EAAd,GAAmBL,MAAnB,GAA4BO,aAAvD,CAAjB;AACD,KAJA;AAOF,GAVD;;AAaA,sBACI;AAAA,cACCZ,YAAY,CAACc,GAAb,CAAiBC,MAAM,iBACpB;AAAA,iBAAuBA,MAAM,CAACT,IAA9B,QAAsCS,MAAM,CAACC,MAA7C,sBAAuD;AAAQ,QAAA,OAAO,EAAIP,YAAY,CAACQ,IAAb,CAAkB,IAAlB,EAAwBF,MAAM,CAACL,EAA/B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvD;AAAA,OAAWK,MAAM,CAACL,EAAlB;AAAA;AAAA;AAAA;AAAA,YADH;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD,CA7CH;;KAAMf,M;AA+CJ,eAAeA,MAAf","sourcesContent":["import personService from '../services/persons'\r\n\r\nconst Person = (props) => {  // printtaa henkilöt ja niiden numerot\r\n  \r\n\r\n    const personsToShow = props.personsToShow\r\n    const persons = props.persons\r\n    const newFilter = props.newFilter\r\n    const filteredList = []\r\n    if (persons.length > 0){\r\n      console.log('uep')\r\n       filteredList = persons.filter(person => {\r\n        return person.name.toLowerCase().includes(newFilter.toLowerCase());\r\n      \r\n   \r\n    });\r\n  } else {\r\n     filteredList = persons.filter(person => {\r\n      return person.name.toLowerCase().includes(newFilter.toLowerCase());\r\n    \r\n    });\r\n  }\r\n   \r\n    \r\n     \r\n    \r\n    const deletePerson = (id) => {\r\n      \r\n\r\n       personService\r\n      .deletePerson(id)\r\n      .then(deletedPerson => {\r\n        props.setPersons(filteredList.map(person => person.id !== id ? person : deletedPerson))\r\n      })\r\n\r\n\r\n    }\r\n   \r\n\r\n    return (\r\n        <div>\r\n        {filteredList.map(tyyppi =>\r\n            <li key = {tyyppi.id}>{tyyppi.name}  {tyyppi.number}   <button onClick = {deletePerson.bind(this, tyyppi.id)}>  delete  </button></li>\r\n                 \r\n     )} \r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Person"]},"metadata":{},"sourceType":"module"}