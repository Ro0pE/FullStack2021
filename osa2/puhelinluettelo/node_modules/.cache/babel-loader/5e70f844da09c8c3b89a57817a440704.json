{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack2021\\\\osa2\\\\puhelinluettelo\\\\src\\\\components\\\\Person.js\",\n    _s = $RefreshSig$();\n\nimport personService from '../services/persons';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Person = props => {\n  _s();\n\n  // printtaa henkilöt ja niiden numerot\n  const personsToShow = props.personsToShow;\n  const setPersons = props.setPersons;\n\n  const deletePerson = id => {\n    console.log('id', id);\n    console.log('lets remove ', personsToShow[id - 1]);\n    personService.deletePerson(id).then(deletedPerson => {\n      setPersons(personsToShow.map(person => person.id !== id ? person : deletedPerson));\n    });\n  };\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons); // initialPersons on servulle olevat tyypit\n    });\n  }, []);\n  console.log('persons-listan koko', personsToShow.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.persons.map(tyyppi => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [tyyppi.name, \"  \", tyyppi.number, \"   \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deletePerson.bind(this, tyyppi.id),\n        children: \"  delete  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 68\n      }, this)]\n    }, tyyppi.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Person, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Person;\nexport default Person;\n\nvar _c;\n\n$RefreshReg$(_c, \"Person\");","map":{"version":3,"sources":["C:/FullStack2021/osa2/puhelinluettelo/src/components/Person.js"],"names":["personService","React","useState","useEffect","Person","props","personsToShow","setPersons","deletePerson","id","console","log","then","deletedPerson","map","person","getAll","initialPersons","length","persons","tyyppi","name","number","bind"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,qBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAAG;AAGzB,QAAMC,aAAa,GAAGD,KAAK,CAACC,aAA5B;AACA,QAAMC,UAAU,GAAGF,KAAK,CAACE,UAAzB;;AAEA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBF,EAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,aAAa,CAACG,EAAE,GAAC,CAAJ,CAAzC;AAGET,IAAAA,aAAa,CACdQ,YADC,CACYC,EADZ,EAEDG,IAFC,CAEIC,aAAa,IAAI;AACrBN,MAAAA,UAAU,CAACD,aAAa,CAACQ,GAAd,CAAkBC,MAAM,IAAIA,MAAM,CAACN,EAAP,KAAcA,EAAd,GAAmBM,MAAnB,GAA4BF,aAAxD,CAAD,CAAV;AACD,KAJC;AAQH,GAbD;;AAcAV,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,aAAa,CACVgB,MADH,GAEGJ,IAFH,CAEQK,cAAc,IAAI;AACtBV,MAAAA,UAAU,CAACU,cAAD,CAAV,CADsB,CACM;AAE/B,KALD;AAMD,GAPQ,EAON,EAPM,CAAT;AASAP,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCL,aAAa,CAACY,MAAhD;AAEA,sBACI;AAAA,cACCb,KAAK,CAACc,OAAN,CAAcL,GAAd,CAAkBM,MAAM,iBACrB;AAAA,iBAAuBA,MAAM,CAACC,IAA9B,QAAsCD,MAAM,CAACE,MAA7C,sBAAuD;AAAQ,QAAA,OAAO,EAAId,YAAY,CAACe,IAAb,CAAkB,IAAlB,EAAwBH,MAAM,CAACX,EAA/B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvD;AAAA,OAAWW,MAAM,CAACX,EAAlB;AAAA;AAAA;AAAA;AAAA,YADH;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD,CAvCH;;GAAML,M;;KAAAA,M;AAyCJ,eAAeA,MAAf","sourcesContent":["import personService from '../services/persons'\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nconst Person = (props) => {  // printtaa henkilöt ja niiden numerot\r\n  \r\n\r\n    const personsToShow = props.personsToShow\r\n    const setPersons = props.setPersons\r\n    \r\n    const deletePerson = (id) => {\r\n      console.log('id',id)\r\n      console.log('lets remove ', personsToShow[id-1])\r\n\r\n\r\n        personService\r\n      .deletePerson(id)\r\n      .then(deletedPerson => {\r\n        setPersons(personsToShow.map(person => person.id !== id ? person : deletedPerson))\r\n      })\r\n      \r\n\r\n      \r\n    }\r\n    useEffect(() => {\r\n      personService\r\n        .getAll()\r\n        .then(initialPersons => {\r\n          setPersons(initialPersons)  // initialPersons on servulle olevat tyypit\r\n          \r\n      })\r\n    }, [])\r\n    \r\n    console.log('persons-listan koko',personsToShow.length)\r\n\r\n    return (\r\n        <div>\r\n        {props.persons.map(tyyppi =>\r\n            <li key = {tyyppi.id}>{tyyppi.name}  {tyyppi.number}   <button onClick = {deletePerson.bind(this, tyyppi.id)}>  delete  </button></li>\r\n                 \r\n     )} \r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Person"]},"metadata":{},"sourceType":"module"}