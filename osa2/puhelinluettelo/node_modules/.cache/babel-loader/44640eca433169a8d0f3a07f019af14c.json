{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack2021\\\\osa2\\\\puhelinluettelo\\\\src\\\\components\\\\Person.js\";\nimport personService from '../services/persons';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Person = props => {\n  // printtaa henkilöt ja niiden numerot\n  const personsToShow = props.personsToShow;\n  const setPersons = props.setPersons;\n\n  const deletePerson = id => {\n    console.log('ID  ', id);\n\n    if (typeof id !== 'undefined') {\n      console.log('index', id - 1);\n      console.log('id', id);\n      console.log('lets remove ', props.persons[id - 1]); //const newList = props.persons.filter((heppu)=> heppu.id !== id);\n      //setPersons(newList);\n\n      console.log('test', props.persons);\n      personService.deletePerson(id).then(deletedPerson => {\n        setPersons(props.persons.map(person => person.id !== id || person.name !== '' ? person : deletedPerson));\n      });\n    } else {\n      console.log('nothign to remove');\n    }\n  };\n\n  console.log(personsToShow);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.personsToShow.map(tyyppi => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\" \", tyyppi.name, \"  \", tyyppi.number, \"   \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deletePerson.bind(this, tyyppi.id),\n        children: \"  delete  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 51\n      }, this), \" \", tyyppi.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Person;\nexport default Person;\n\nvar _c;\n\n$RefreshReg$(_c, \"Person\");","map":{"version":3,"sources":["C:/FullStack2021/osa2/puhelinluettelo/src/components/Person.js"],"names":["personService","React","useState","useEffect","Person","props","personsToShow","setPersons","deletePerson","id","console","log","persons","then","deletedPerson","map","person","name","tyyppi","number","bind"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,qBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAG;AAGzB,QAAMC,aAAa,GAAGD,KAAK,CAACC,aAA5B;AACA,QAAMC,UAAU,GAAGF,KAAK,CAACE,UAAzB;;AAIA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAqBF,EAArB;;AACA,QAAI,OAAOA,EAAP,KAAe,WAAnB,EAAgC;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,EAAE,GAAC,CAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBF,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,KAAK,CAACO,OAAN,CAAcH,EAAE,GAAC,CAAjB,CAA5B,EAHgC,CAKhC;AACA;;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAqBN,KAAK,CAACO,OAA3B;AACEZ,MAAAA,aAAa,CACdQ,YADC,CACYC,EADZ,EAEDI,IAFC,CAEIC,aAAa,IAAI;AACrBP,QAAAA,UAAU,CAACF,KAAK,CAACO,OAAN,CAAcG,GAAd,CAAkBC,MAAM,IAAIA,MAAM,CAACP,EAAP,KAAcA,EAAd,IAAoBO,MAAM,CAACC,IAAP,KAAgB,EAApC,GAAyCD,MAAzC,GAAkDF,aAA9E,CAAD,CAAV;AACD,OAJC;AAKH,KAfC,MAeK;AACLJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AAEA,GArBD;;AAwBAD,EAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AAKA,sBACI;AAAA,cACCD,KAAK,CAACC,aAAN,CAAoBS,GAApB,CAAwBG,MAAM,iBAC3B;AAAA,sBAAMA,MAAM,CAACD,IAAb,QAAqBC,MAAM,CAACC,MAA5B,sBAAsC;AAAQ,QAAA,OAAO,EAAIX,YAAY,CAACY,IAAb,CAAkB,IAAlB,EAAwBF,MAAM,CAACT,EAA/B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtC,OAAkHS,MAAM,CAACT,EAAzH;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AASD,CA9CH;;KAAML,M;AAgDJ,eAAeA,MAAf","sourcesContent":["import personService from '../services/persons'\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nconst Person = (props) => {  // printtaa henkilöt ja niiden numerot\r\n  \r\n\r\n    const personsToShow = props.personsToShow\r\n    const setPersons = props.setPersons\r\n\r\n    \r\n    \r\n    const deletePerson = (id) => {\r\n      console.log('ID  ' , id)\r\n      if (typeof(id) !== 'undefined') {\r\n      console.log('index',id-1)\r\n      console.log('id',id)\r\n      console.log('lets remove ', props.persons[id-1])\r\n\r\n      //const newList = props.persons.filter((heppu)=> heppu.id !== id);\r\n      //setPersons(newList);\r\n      \r\n\r\n      console.log('test' , props.persons)\r\n        personService\r\n      .deletePerson(id)\r\n      .then(deletedPerson => {\r\n        setPersons(props.persons.map(person => person.id !== id || person.name !== '' ? person : deletedPerson))\r\n      })\r\n    } else {\r\n      console.log('nothign to remove')\r\n    }\r\n      \r\n    }\r\n\r\n\r\n    console.log(personsToShow)\r\n\r\n \r\n    \r\n\r\n    return (\r\n        <div>\r\n        {props.personsToShow.map(tyyppi =>\r\n            <li> {tyyppi.name}  {tyyppi.number}   <button onClick = {deletePerson.bind(this, tyyppi.id)}>  delete  </button> {tyyppi.id}</li>\r\n           \r\n                 \r\n     )} \r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Person"]},"metadata":{},"sourceType":"module"}