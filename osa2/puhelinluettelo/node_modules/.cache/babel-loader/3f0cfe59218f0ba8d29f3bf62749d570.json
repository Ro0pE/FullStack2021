{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack2021\\\\osa2\\\\puhelinluettelo\\\\src\\\\components\\\\Person.js\";\nimport personService from '../services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Person = props => {\n  // printtaa henkilöt ja niiden numerot\n  const personsToShow = props.personsToShow;\n\n  const deletePerson = id => {\n    props.setShowAll(true);\n    console.log('id', id);\n    console.log('lets remove ', personsToShow[id - 1]);\n    personService.deletePerson(id).then(deletedPerson => {\n      props.setPersons(personsToShow.map(person => person.id !== id ? person : deletedPerson));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: personsToShow.map(tyyppi => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [tyyppi.name, \"  \", tyyppi.number, \"   \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deletePerson.bind(this, tyyppi.id),\n        children: \"  delete  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 68\n      }, this)]\n    }, tyyppi.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Person;\nexport default Person;\n\nvar _c;\n\n$RefreshReg$(_c, \"Person\");","map":{"version":3,"sources":["C:/FullStack2021/osa2/puhelinluettelo/src/components/Person.js"],"names":["personService","Person","props","personsToShow","deletePerson","id","setShowAll","console","log","then","deletedPerson","setPersons","map","person","tyyppi","name","number","bind"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,qBAA1B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAG;AAGzB,QAAMC,aAAa,GAAGD,KAAK,CAACC,aAA5B;;AAKA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC3BH,IAAAA,KAAK,CAACI,UAAN,CAAiB,IAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBH,EAAjB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,aAAa,CAACE,EAAE,GAAC,CAAJ,CAAzC;AAGCL,IAAAA,aAAa,CACbI,YADA,CACaC,EADb,EAEAI,IAFA,CAEKC,aAAa,IAAI;AACrBR,MAAAA,KAAK,CAACS,UAAN,CAAiBR,aAAa,CAACS,GAAd,CAAkBC,MAAM,IAAIA,MAAM,CAACR,EAAP,KAAcA,EAAd,GAAmBQ,MAAnB,GAA4BH,aAAxD,CAAjB;AACD,KAJA;AAOF,GAbD;;AAgBA,sBACI;AAAA,cACCP,aAAa,CAACS,GAAd,CAAkBE,MAAM,iBACrB;AAAA,iBAAuBA,MAAM,CAACC,IAA9B,QAAsCD,MAAM,CAACE,MAA7C,sBAAuD;AAAQ,QAAA,OAAO,EAAIZ,YAAY,CAACa,IAAb,CAAkB,IAAlB,EAAwBH,MAAM,CAACT,EAA/B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvD;AAAA,OAAWS,MAAM,CAACT,EAAlB;AAAA;AAAA;AAAA;AAAA,YADH;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD,CAhCH;;KAAMJ,M;AAkCJ,eAAeA,MAAf","sourcesContent":["import personService from '../services/persons'\r\n\r\nconst Person = (props) => {  // printtaa henkilöt ja niiden numerot\r\n  \r\n\r\n    const personsToShow = props.personsToShow\r\n   \r\n    \r\n     \r\n    \r\n    const deletePerson = (id) => {\r\n      props.setShowAll(true)\r\n      console.log('id',id)\r\n      console.log('lets remove ', personsToShow[id-1])\r\n\r\n\r\n       personService\r\n      .deletePerson(id)\r\n      .then(deletedPerson => {\r\n        props.setPersons(personsToShow.map(person => person.id !== id ? person : deletedPerson))\r\n      })\r\n\r\n\r\n    }\r\n   \r\n\r\n    return (\r\n        <div>\r\n        {personsToShow.map(tyyppi =>\r\n            <li key = {tyyppi.id}>{tyyppi.name}  {tyyppi.number}   <button onClick = {deletePerson.bind(this, tyyppi.id)}>  delete  </button></li>\r\n                 \r\n     )} \r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Person"]},"metadata":{},"sourceType":"module"}