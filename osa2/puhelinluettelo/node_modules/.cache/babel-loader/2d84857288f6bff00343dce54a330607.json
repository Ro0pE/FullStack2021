{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack2021\\\\osa2\\\\puhelinluettelo\\\\src\\\\components\\\\AddPerson.js\";\nimport personService from '../services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPerson = props => {\n  const newPerson = props.newPerson;\n  const newNumber = props.newNumber;\n  const persons = props.persons;\n  const setPersons = props.setPersons;\n  const setNewPerson = props.setNewPerson;\n  const setNewNumber = props.setNewNumber;\n  const Errormessage = props.Errormessage;\n  const setErrormessage = props.setErrormessage;\n  const succesfullOperation = props.succesfullOperation;\n  const setSuccesfullOperation = props.setSuccesfullOperation;\n\n  const add = event => {\n    // lisätään henkilö, nimi,numero ja id\n    const personObject = {\n      // uutta objektia tuosta\n      name: newPerson,\n      number: newNumber\n    };\n    var listalla = false; // \n\n    for (let i = 0; i < persons.length; i++) {\n      if (!(persons[i].name === personObject.name)) {\n        // tutkitaan, onko henkilö jo puhelinluettelossa. Jos ei, niin lisätään ja jos on niin alerttia perään\n        listalla = false;\n      } else {\n        if (typeof personObject.name !== 'undefined') {\n          listalla = true;\n          let message = `Person ${personObject.name} is already added to phonebook, replace the old number with a new one?`;\n          let result = window.confirm(message);\n\n          if (result === true) {\n            /// kun halutaan päivittää numero eli klikataan ok\n            const person = persons.find(n => n.id === persons[i].id);\n            const updatedPerson = { ...person,\n              number: newNumber\n            };\n            personService // päivitetään databasen tieto\n            .updateNumber(persons[i].id, updatedPerson).then(returnedPerson => {\n              setPersons(persons.map(person => person.id !== persons[i].id ? person : returnedPerson));\n            });\n          }\n\n          if (result === false) {}\n        }\n      }\n    }\n\n    if (!(listalla === true)) {\n      if (typeof personObject.name === 'undefined') {} else {\n        //   let message = `Added ${personObject.name} `\n        //   alert(message);\n        personService.addPerson(personObject).then(response => {\n          setPersons(persons.concat(response));\n        });\n        setSuccesfullOperation(`Added ${personObject.name} `);\n        setTimeout(() => {\n          setSuccesfullOperation(null);\n        }, 2000);\n      }\n    }\n\n    listalla = false;\n  };\n\n  const handleAddPerson = event => {\n    // lisää henkilölle nimi\n    if (event.target.value.length > 0) {\n      setNewPerson(event.target.value);\n    }\n  };\n\n  const handleAddNumber = event => {\n    // lisää henkilölle numero\n    setNewNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: add,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleAddPerson\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleAddNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AddPerson;\nexport default AddPerson;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPerson\");","map":{"version":3,"sources":["C:/FullStack2021/osa2/puhelinluettelo/src/components/AddPerson.js"],"names":["personService","AddPerson","props","newPerson","newNumber","persons","setPersons","setNewPerson","setNewNumber","Errormessage","setErrormessage","succesfullOperation","setSuccesfullOperation","add","event","personObject","name","number","listalla","i","length","message","result","window","confirm","person","find","n","id","updatedPerson","updateNumber","then","returnedPerson","map","addPerson","response","concat","setTimeout","handleAddPerson","target","value","handleAddNumber"],"mappings":"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","sourcesContent":["import personService from '../services/persons'\r\n\r\nconst AddPerson = (props) => {\r\n  \r\n    const newPerson = props.newPerson\r\n    const newNumber = props.newNumber\r\n    const persons = props.persons\r\n    const setPersons = props.setPersons\r\n    const setNewPerson = props.setNewPerson\r\n    const setNewNumber = props.setNewNumber\r\n    const Errormessage = props.Errormessage\r\n    const setErrormessage = props.setErrormessage\r\n    const succesfullOperation = props.succesfullOperation\r\n    const setSuccesfullOperation = props.setSuccesfullOperation\r\n  \r\n\r\n\r\n   \r\n\r\n    const add = (event) => {   // lisätään henkilö, nimi,numero ja id\r\n       \r\n        const personObject = {  // uutta objektia tuosta\r\n          name: newPerson,\r\n          number: newNumber, \r\n\r\n        }\r\n\r\n\r\n\r\n        \r\n        var listalla = false;  // \r\n\r\n        \r\n        for (let  i = 0; i < persons.length; i++){\r\n    \r\n         if (!(persons[i].name === personObject.name)){  // tutkitaan, onko henkilö jo puhelinluettelossa. Jos ei, niin lisätään ja jos on niin alerttia perään\r\n           listalla = false;\r\n       \r\n         } else {\r\n           if (typeof(personObject.name) !== 'undefined'){              \r\n           listalla = true;\r\n           let message = `Person ${personObject.name} is already added to phonebook, replace the old number with a new one?`\r\n           let result = window.confirm(message)      \r\n           if (result === true){ /// kun halutaan päivittää numero eli klikataan ok\r\n            const person = persons.find(n=> n.id === persons[i].id)\r\n            const updatedPerson =  {...person, number: newNumber}\r\n\r\n            personService   // päivitetään databasen tieto\r\n             .updateNumber(persons[i].id, updatedPerson)\r\n             .then(returnedPerson => {\r\n              setPersons(persons.map(person => person.id !== persons[i].id ? person : returnedPerson))\r\n            })\r\n         \r\n\r\n\r\n           }\r\n           if (result === false){\r\n            \r\n           }\r\n     \r\n         }\r\n        }\r\n      \r\n        }\r\n\r\n        \r\n        if (!(listalla === true)){\r\n\r\n          if (typeof(personObject.name) === 'undefined'){\r\n\r\n          } else {\r\n         //   let message = `Added ${personObject.name} `\r\n         //   alert(message);\r\n            \r\n\r\n            personService    \r\n             .addPerson(personObject)\r\n             .then(response => {\r\n              setPersons(persons.concat(response))\r\n             })\r\n             setSuccesfullOperation(`Added ${personObject.name} `) \r\n             setTimeout(() => {\r\n               setSuccesfullOperation(null)\r\n             }, 2000)\r\n       \r\n            }\r\n        }\r\n    \r\n        listalla = false;\r\n      \r\n      }\r\n    \r\n      const handleAddPerson = (event) => {  // lisää henkilölle nimi\r\n\r\n        if (event.target.value.length > 0){\r\n          setNewPerson(event.target.value)\r\n        } \r\n      \r\n     \r\n      }\r\n      \r\n      const handleAddNumber = (event) => {  // lisää henkilölle numero\r\n       \r\n        setNewNumber(event.target.value)\r\n     \r\n      }\r\n\r\n      \r\n      \r\n\r\n    \r\n    return (\r\n        <form onSubmit = {add}>\r\n        <div>\r\n          <p>Name: <input onChange={handleAddPerson}/></p> \r\n          <p>Number: <input onChange={handleAddNumber}/></p>\r\n          <button type=\"submit\">Add</button>\r\n        </div>\r\n        <ul>\r\n\r\n        </ul>\r\n      </form>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AddPerson"]},"metadata":{},"sourceType":"module"}