{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack2021\\\\osa2\\\\puhelinluettelo\\\\src\\\\components\\\\Person.js\";\nimport personService from '../services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Person = props => {\n  // printtaa henkilöt ja niiden numerot\n  const newPerson = props.newPerson;\n  const newNumber = props.newNumber;\n  const setPersons = props.setPersons;\n\n  const fetchAll = () => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons); // haetaan henkilöt databasesta\n    });\n  };\n\n  fetchAll();\n\n  const deletePerson = id => {\n    if (typeof id !== 'undefined') {\n      const newList = props.persons.filter(person => person.id !== id);\n      const personObject = {\n        // uutta objektia tuosta\n        name: newPerson,\n        number: newNumber\n      };\n      let message = `Delete ${personObject.name} ?`;\n      let result = window.confirm(message);\n\n      if (result === true) {\n        personService.deletePerson(id).then(deletedPerson => {\n          setPersons(props.persons.map(person => person.id !== id || person.name !== '' ? person : deletedPerson));\n        });\n        props.setPersons(newList);\n        fetchAll();\n      } else {\n        console.log('nothing removed');\n      }\n    }\n  };\n\n  const personsToShow = false // filtteröidään, joko näytetään kaikki, tai näytetään filtteröity lista > person.name sisältää (filtterin setit)\n  ? props.persons : props.persons.filter(person => person.name.toLowerCase().includes(props.newFilter.toLowerCase())); // muutetaan kaikki pieniksi kirjaimiksi niin ei oo kirjainkoolla väliä\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: personsToShow.map(tyyppi => /*#__PURE__*/_jsxDEV(\"li\", {\n      ket: tyyppi.id,\n      children: [\" \", tyyppi.name, \"  \", tyyppi.number, \"   \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deletePerson.bind(this, tyyppi.id),\n        children: \"  delete  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 69\n      }, this), \" \", tyyppi.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Person;\nexport default Person;\n\nvar _c;\n\n$RefreshReg$(_c, \"Person\");","map":{"version":3,"sources":["C:/FullStack2021/osa2/puhelinluettelo/src/components/Person.js"],"names":["personService","Person","props","newPerson","newNumber","setPersons","fetchAll","getAll","then","initialPersons","deletePerson","id","newList","persons","filter","person","personObject","name","number","message","result","window","confirm","deletedPerson","map","console","log","personsToShow","toLowerCase","includes","newFilter","tyyppi","bind"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,qBAA1B;;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAG;AAC3B,QAAMC,SAAS,GAAGD,KAAK,CAACC,SAAxB;AACE,QAAMC,SAAS,GAAGF,KAAK,CAACE,SAAxB;AACF,QAAMC,UAAU,GAAGH,KAAK,CAACG,UAAzB;;AACE,QAAMC,QAAQ,GAAG,MAAK;AAClBN,IAAAA,aAAa,CACVO,MADH,GAEGC,IAFH,CAEQC,cAAc,IAAI;AACtBJ,MAAAA,UAAU,CAACI,cAAD,CAAV,CADsB,CACM;AAE/B,KALD;AASH,GAVD;;AAWAH,EAAAA,QAAQ;;AAGR,QAAMI,YAAY,GAAIC,EAAD,IAAQ;AAC3B,QAAI,OAAOA,EAAP,KAAe,WAAnB,EAAgC;AAChC,YAAMC,OAAO,GAAGV,KAAK,CAACW,OAAN,CAAcC,MAAd,CAAsBC,MAAD,IAAYA,MAAM,CAACJ,EAAP,KAAcA,EAA/C,CAAhB;AAGA,YAAMK,YAAY,GAAG;AAAG;AACtBC,QAAAA,IAAI,EAAEd,SADa;AAEnBe,QAAAA,MAAM,EAAEd;AAFW,OAArB;AAKA,UAAIe,OAAO,GAAI,UAASH,YAAY,CAACC,IAAK,IAA1C;AACA,UAAIG,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAeH,OAAf,CAAb;;AACA,UAAIC,MAAM,KAAK,IAAf,EAAqB;AAErBpB,QAAAA,aAAa,CACZU,YADD,CACcC,EADd,EAECH,IAFD,CAEMe,aAAa,IAAI;AACrBlB,UAAAA,UAAU,CAACH,KAAK,CAACW,OAAN,CAAcW,GAAd,CAAkBT,MAAM,IAAIA,MAAM,CAACJ,EAAP,KAAcA,EAAd,IAAoBI,MAAM,CAACE,IAAP,KAAgB,EAApC,GAAyCF,MAAzC,GAAkDQ,aAA9E,CAAD,CAAV;AAED,SALD;AAMArB,QAAAA,KAAK,CAACG,UAAN,CAAiBO,OAAjB;AACAN,QAAAA,QAAQ;AAGT,OAZC,MAYK;AACLmB,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;AACA;AAEA,GA7BD;;AA+BA,QAAMC,aAAa,GAAG,MAAU;AAAV,IAEpBzB,KAAK,CAACW,OAFc,GAGpBX,KAAK,CAACW,OAAN,CAAcC,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACE,IAAP,CAAYW,WAAZ,GAA0BC,QAA1B,CAAmC3B,KAAK,CAAC4B,SAAN,CAAgBF,WAAhB,EAAnC,CAA/B,CAHF,CAjDsB,CAoD8E;;AAQpG,sBACI;AAAA,cACCD,aAAa,CAACH,GAAd,CAAkBO,MAAM,iBACrB;AAAI,MAAA,GAAG,EAAIA,MAAM,CAACpB,EAAlB;AAAA,sBAAwBoB,MAAM,CAACd,IAA/B,QAAuCc,MAAM,CAACb,MAA9C,sBAAwD;AAAQ,QAAA,OAAO,EAAIR,YAAY,CAACsB,IAAb,CAAkB,IAAlB,EAAwBD,MAAM,CAACpB,EAA/B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxD,OAAoIoB,MAAM,CAACpB,EAA3I;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AASD,CArEH;;KAAMV,M;AAuEJ,eAAeA,MAAf","sourcesContent":["import personService from '../services/persons'\r\n\r\n\r\nconst Person = (props) => {  // printtaa henkilöt ja niiden numerot\r\n  const newPerson = props.newPerson\r\n    const newNumber = props.newNumber\r\n  const setPersons = props.setPersons\r\n    const fetchAll = () =>{\r\n        personService\r\n          .getAll()\r\n          .then(initialPersons => {\r\n            setPersons(initialPersons)  // haetaan henkilöt databasesta\r\n            \r\n        })\r\n        \r\n      \r\n\r\n    }\r\n    fetchAll();\r\n   \r\n\r\n    const deletePerson = (id) => {\r\n      if (typeof(id) !== 'undefined') {\r\n      const newList = props.persons.filter((person) => person.id !== id);\r\n\r\n      \r\n      const personObject = {  // uutta objektia tuosta\r\n        name: newPerson,\r\n        number: newNumber, \r\n\r\n      }\r\n      let message = `Delete ${personObject.name} ?`\r\n      let result = window.confirm(message)  \r\n      if (result === true) {\r\n\r\n      personService\r\n      .deletePerson(id)\r\n      .then(deletedPerson => {\r\n        setPersons(props.persons.map(person => person.id !== id || person.name !== '' ? person : deletedPerson))\r\n    \r\n      })\r\n      props.setPersons(newList)\r\n      fetchAll();\r\n      \r\n\r\n    } else {\r\n      console.log('nothing removed')\r\n    }\r\n    }\r\n      \r\n    }\r\n    \r\n    const personsToShow = false     // filtteröidään, joko näytetään kaikki, tai näytetään filtteröity lista > person.name sisältää (filtterin setit)\r\n\r\n    ? props.persons\r\n    : props.persons.filter(person => person.name.toLowerCase().includes(props.newFilter.toLowerCase())) // muutetaan kaikki pieniksi kirjaimiksi niin ei oo kirjainkoolla väliä\r\n\r\n\r\n  \r\n\r\n \r\n    \r\n\r\n    return (\r\n        <div>\r\n        {personsToShow.map(tyyppi =>\r\n            <li ket = {tyyppi.id}> {tyyppi.name}  {tyyppi.number}   <button onClick = {deletePerson.bind(this, tyyppi.id)}>  delete  </button> {tyyppi.id}</li>\r\n           \r\n                 \r\n     )} \r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Person"]},"metadata":{},"sourceType":"module"}