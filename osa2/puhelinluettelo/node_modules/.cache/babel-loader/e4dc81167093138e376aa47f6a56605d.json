{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack2021\\\\osa2\\\\puhelinluettelo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Clear from './components/Clear';\nimport Filter from './components/Filter';\nimport AddPerson from './components/AddPerson';\nimport Person from './components/Person';\nimport noteService from './services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]); // tässä on lista henkilöistä jotka ovat puhelinluettelossa, aluksi tyhjä\n\n  const [newPerson, setNewPerson] = useState(); // tätä tarvitaan uuden henkilön  nimen lisäämiseen\n\n  const [newNumber, setNewNumber] = useState(); // tätä tarvitraan uuden henkilön numeron lisäämiseen\n\n  const [newFilter, setFilter] = useState(''); // tässä on filtteri\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setPersons(initialNotes);\n    });\n  }, []);\n  const personsToShow = false // filtteröidään, joko näytetään kaikki, tai näytetään filtteröity lista > person.name sisältää (filtterin setit)\n  ? persons : persons.filter(person => person.name.toLocaleLowerCase().includes(newFilter.toLowerCase())); // muutetaan kaikki pieniksi kirjaimiksi niin ei oo kirjainkoolla väliä\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPerson, {\n      persons: persons,\n      setPersons: setPersons,\n      newPerson: newPerson,\n      setNewPerson: setNewPerson,\n      newNumber: newNumber,\n      setNewNumber: setNewNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Person, {\n      personsToShow: personsToShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"---------------------------------------\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Clear, {\n      setPersons: setPersons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"81EHya8x9+2zp2dJ40A+sMKppig=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/FullStack2021/osa2/puhelinluettelo/src/App.js"],"names":["React","useState","useEffect","axios","Clear","Filter","AddPerson","Person","noteService","App","persons","setPersons","newPerson","setNewPerson","newNumber","setNewNumber","newFilter","setFilter","getAll","then","initialNotes","personsToShow","filter","person","name","toLocaleLowerCase","includes","toLowerCase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC,CAFgB,CAE+B;;AAC/C,QAAM,CAAEW,SAAF,EAAaC,YAAb,IAA8BZ,QAAQ,EAA5C,CAHgB,CAGgC;;AAChD,QAAM,CAAEa,SAAF,EAAaC,YAAb,IAA8Bd,QAAQ,EAA5C,CAJgB,CAIgC;;AAChD,QAAM,CAAEe,SAAF,EAAaC,SAAb,IAA2BhB,QAAQ,CAAC,EAAD,CAAzC,CALgB,CAK+B;;AAE/CC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,WAAW,CACRU,MADH,GAEGC,IAFH,CAEQC,YAAY,IAAI;AACpBT,MAAAA,UAAU,CAACS,YAAD,CAAV;AACH,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,QAAMC,aAAa,GAAG,MAAU;AAAV,IAClBX,OADkB,GAElBA,OAAO,CAACY,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,iBAAZ,GAAgCC,QAAhC,CAAyCV,SAAS,CAACW,WAAV,EAAzC,CAAzB,CAFJ,CAfgB,CAiBiF;;AAGjG,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEM,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAIV;AAArB;AAAA;AAAA;AAAA;AAAA,YAFN,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIK,QAAC,SAAD;AAAW,MAAA,OAAO,EAAIP,OAAtB;AAA+B,MAAA,UAAU,EAAIC,UAA7C;AAAyD,MAAA,SAAS,EAAIC,SAAtE;AAAiF,MAAA,YAAY,EAAIC,YAAjG;AAA+G,MAAA,SAAS,EAAIC,SAA5H;AAAuI,MAAA,YAAY,EAAIC;AAAvJ;AAAA;AAAA;AAAA;AAAA,YAJL,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOM,QAAC,MAAD;AAAQ,MAAA,aAAa,EAAIM;AAAzB;AAAA;AAAA;AAAA;AAAA,YAPN,eAQM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARN,eASM,QAAC,KAAD;AAAO,MAAA,UAAU,EAAIV;AAArB;AAAA;AAAA;AAAA;AAAA,YATN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlCD;;GAAMF,G;;KAAAA,G;AAqCN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Clear from './components/Clear'\nimport Filter from './components/Filter'\nimport AddPerson from './components/AddPerson'\nimport Person from './components/Person'\nimport noteService from './services/persons'\n\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([])   // tässä on lista henkilöistä jotka ovat puhelinluettelossa, aluksi tyhjä\n  const [ newPerson, setNewPerson ] = useState()  // tätä tarvitaan uuden henkilön  nimen lisäämiseen\n  const [ newNumber, setNewNumber ] = useState()  // tätä tarvitraan uuden henkilön numeron lisäämiseen\n  const [ newFilter, setFilter ] = useState('')  // tässä on filtteri\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setPersons(initialNotes)\n    })\n  }, [])\n\n  const personsToShow = false     // filtteröidään, joko näytetään kaikki, tai näytetään filtteröity lista > person.name sisältää (filtterin setit)\n    ? persons\n    : persons.filter(person => person.name.toLocaleLowerCase().includes(newFilter.toLowerCase()))  // muutetaan kaikki pieniksi kirjaimiksi niin ei oo kirjainkoolla väliä\n\n\n  return (\n    <div>\n      <h2>Phonebook:</h2>     \n          <Filter setFilter = {setFilter} />    \n      <h2>Add a new:</h2>\n         <AddPerson persons = {persons} setPersons = {setPersons} newPerson = {newPerson} setNewPerson = {setNewPerson} newNumber = {newNumber} setNewNumber = {setNewNumber}/>\n\n      <h2>Numbers:</h2>\n          <Person personsToShow = {personsToShow} />\n          <p>---------------------------------------</p>\n          <Clear setPersons = {setPersons}/>\n    </div>\n  )\n\n}\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}